Used Infrastructure:

1 server
1 web server (Nginx)
1 application server
1 application files (your code base)
1 database (MySQL)
1 domain name foobar.com configured with a www record that points to your server IP 8.8.8.8

Infrastructure Diagram Available At:

Overview:

The infrastructure consists of one physical server, which mean that there is only one software and hardware source of resources to serve the foobar.com website. This include serving the Nginx (the web server) and the application server for executing the code base, where the data of the website are stored and maintained using MySQL database.

What is a server:
The core server provide the hardware and software needed for running web server, application server, and database connection

Workflow:

- The user visits the website at http://www.foobar.com/
  - If the IP addressed is cached in the user browser or device the cached IP is used.
  - If not, The IP is accessed using DNS using the A record type.
- Nginx receives the HTTP request and forwards it to the application server if necessary.
  - If no forwarding is required, Nginx serves static content from its own file system. This includes HTML pages, images, CSS, JavaScript, etc.
  - If there are no requests being made to the application server, then Nginx will serve up static content from its cache or generate it on the fly from the application files.
- In case of dynamic requests, Application Server handles dynamic requests by running logic generated from base code.
- If the request needs to access to the database, the application server connect to database for accessing data or updating
- Application server run the required logic and return the response to the web server.
- Web server receives the data from application server and response to the user browser with HTTP request to show the results to the user

Issues

- Single Point Of Failure (SPOF):
  As the core SERVER is the only source of the resources of th this website any failure in this server will cause a failure to the whole website.
  The same applies to WEB SERVER, APPLICATION SERVER, and DATABASE.
- Downtime because of Maintenance:
  while maintaining your website like adding new features or fixing some bugs you may need to restart server. Having only one server for serving the website will cause downtime while the server restart.
- Scaling Limitation for high traffics:
  As the server has more traffics it needs more resources to be able to serve users' requests. A solution could be providing better resources for the same server like higher CPU and more RAM. The problem with this solution that it has limitation as it has higher costs and more limited functionality increase. And at some point it will be not even possible to increase the resources for the same server (Reached the highest physical technologies available in the market).
